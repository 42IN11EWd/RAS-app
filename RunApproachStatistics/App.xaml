<Application x:Class="RunApproachStatistics.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:v="clr-namespace:RunApproachStatistics.View"
             xmlns:vm="clr-namespace:RunApproachStatistics.ViewModel"
             xmlns:toolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit"
             ShutdownMode="OnExplicitShutdown">
    
    <Application.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
        
        <!-- START Set the view models -->
        <DataTemplate DataType="{x:Type vm:MenuViewModel}">
            <v:MenuView DataContext="{Binding}" />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:HomeViewModel}">
            <v:HomeView DataContext="{Binding}" />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:CameraViewModel}">
            <v:CameraView DataContext="{Binding}" />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:VideoViewModel}">
            <v:VideoView DataContext="{Binding}" />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:VideoPlaybackViewModel}">
            <v:VideoPlaybackView DataContext="{Binding}" />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:CompareVaultsViewModel}">
            <v:CompareVaultsView DataContext="{Binding}" />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:MeasurementViewModel}">
            <v:MeasurementView DataContext="{Binding}" />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:PostMeasurementViewModel}">
            <v:PostMeasurementView DataContext="{Binding}" />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:ProfileViewModel}">
            <v:ProfileView DataContext="{Binding}" />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:SettingsViewModel}">
            <v:SettingsView DataContext="{Binding}" />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:VaultSelectorViewModel}">
            <v:VaultSelectorView DataContext="{Binding}" />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:ThumbnailViewModel}">
            <v:ThumbnailView DataContext="{Binding}" />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:RatingViewModel}">
            <v:RatingView DataContext="{Binding}" />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:LocationEditorViewModel}">
            <v:LocationEditorView DataContext="{Binding}" />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:VaultNumberEditorViewModel}">
            <v:VaultNumberEditorView DataContext="{Binding}" />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:LockViewModel}">
            <v:LockView DataContext="{Binding}" />
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:GraphViewModel}">
            <v:GraphView DataContext="{Binding}" />
        </DataTemplate>
        <!-- END Set the view models -->
        
        <!-- START UI Definitions -->
        <Style TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#FFF6A201"/>
            <Setter Property="Foreground" Value="#FF222222"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#7d7d7d"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="#dddddd"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- END UI Definitions -->
        
        <!-- START Error UI Definition -->
        <Style x:Key="textBoxInError" TargetType="{x:Type TextBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                            Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="passwordBoxInError" TargetType="{x:Type PasswordBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                                    Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="autoCompleteTextBoxInError" TargetType="{x:Type toolkit:AutoCompleteBox}">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                                    Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- END Error UI Definition-->
    </Application.Resources>
</Application>
